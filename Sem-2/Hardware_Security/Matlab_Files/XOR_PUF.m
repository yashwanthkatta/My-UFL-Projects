%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: M:\HS_Project\XOR_PUF.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/04/23 01:20:28

%% Import the data
[~, ~, raw] = xlsread('M:\HS_Project\XOR_PUF.xlsx','Sheet1');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,1));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,2);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
XOR = table;

%% Allocate imported array to column variable names
XOR.Challenge_Bits = cellstr(stringVectors(:,1));
XOR.Response_Bits = data(:,1);

%% Clear temporary variables
clearvars data raw stringVectors R;

%% CALCULATING UNIFORMITY OF THE XOR ARBITER PUF

Count_UNI = sum(XOR.Response_Bits(:) == 1);
Uniformity_XOR_PUF = Count_UNI/length(XOR.Response_Bits);

%% Calculating the Reliability

Count_REL = sum(XOR.Response_Bits(:) == 1) + sum(XOR.Response_Bits(:) == 0);
Reliability_XOR_PUF = Count_REL/length(XOR.Response_Bits);

